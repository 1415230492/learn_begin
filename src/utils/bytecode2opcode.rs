use log::info;
use std::collections::HashMap;
use std::fs;


// 获取转码对应的规则
pub fn get_rules() -> HashMap<&'static str, &'static str>{
    let opcode_hashmap = HashMap::from([
        ("00", "STOP"),
        ("01", "ADD"),
        ("02", "MUL"),
        ("03", "SUB"),
        ("04", "DIV"),
        ("05", "SDIV"),
        ("06", "MOD"),
        ("07", "SMOD"),
        ("08", "ADDMOD"),
        ("09", "MULMOD"),
        ("0A", "EXP"),
        ("0B", "SIGNEXTEND"),
        ("10", "LT"),
        ("11", "GT"),
        ("12", "SLT"),
        ("13", "SGT"),
        ("14", "EQ"),
        ("15", "ISZERO"),
        ("16", "AND"),
        ("17", "OR"),
        ("18", "XOR"),
        ("19", "NOT"),
        ("1A", "BYTE"),
        ("1B", "SHL"),
        ("1C", "SHR"),
        ("1D", "SAR"),
        ("20", "SHA3"),
        ("30", "ADDRESS"),
        ("31", "BALANCE"),
        ("32", "ORIGIN"),
        ("33", "CALLER"),
        ("34", "CALLVALUE"),
        ("35", "CALLDATALOAD"),
        ("36", "CALLDATASIZE"),
        ("37", "CALLDATACOPY"),
        ("38", "CODESIZE"),
        ("39", "CODECOPY"),
        ("3A", "GASPRICE"),
        ("3B", "EXTCODESIZE"),
        ("3C", "EXTCODECOPY"),
        ("3D", "RETURNDATASIZE"),
        ("3E", "RETURNDATACOPY"),
        ("3F", "EXTCODEHASH"),
        ("40", "BLOCKHASH"),
        ("41", "COINBASE"),
        ("42", "TIMESTAMP"),
        ("43", "NUMBER"),
        ("44", "DIFFICULTY"),
        ("45", "GASLIMIT"),
        ("46", "CHAINID"),
        ("47", "SELFBALANCE"),
        ("48", "BASEFEE"),
        ("50", "POP"),
        ("51", "MLOAD"),
        ("52", "MSTORE"),
        ("53", "MSTORE8"),
        ("54", "SLOAD"),
        ("55", "SSTORE"),
        ("56", "JUMP"),
        ("57", "JUMPI"),
        ("58", "PC"),
        ("59", "MSIZE"),
        ("5A", "GAS"),
        ("5B", "JUMPDEST"),
        ("60", "PUSH1"),
        ("61", "PUSH2"),
        ("62", "PUSH3"),
        ("63", "PUSH4"),
        ("64", "PUSH5"),
        ("65", "PUSH6"),
        ("66", "PUSH7"),
        ("67", "PUSH8"),
        ("68", "PUSH9"),
        ("69", "PUSH10"),
        ("6A", "PUSH11"),
        ("6B", "PUSH12"),
        ("6C", "PUSH13"),
        ("6D", "PUSH14"),
        ("6E", "PUSH15"),
        ("6F", "PUSH16"),
        ("70", "PUSH17"),
        ("71", "PUSH18"),
        ("72", "PUSH19"),
        ("73", "PUSH20"),
        ("74", "PUSH21"),
        ("75", "PUSH22"),
        ("76", "PUSH23"),
        ("77", "PUSH24"),
        ("78", "PUSH25"),
        ("79", "PUSH26"),
        ("7A", "PUSH27"),
        ("7B", "PUSH28"),
        ("7C", "PUSH29"),
        ("7D", "PUSH30"),
        ("7E", "PUSH31"),
        ("7F", "PUSH32"),
        ("80", "DUP1"),
        ("81", "DUP2"),
        ("82", "DUP3"),
        ("83", "DUP4"),
        ("84", "DUP5"),
        ("85", "DUP6"),
        ("86", "DUP7"),
        ("87", "DUP8"),
        ("88", "DUP9"),
        ("89", "DUP10"),
        ("8A", "DUP11"),
        ("8B", "DUP12"),
        ("8C", "DUP13"),
        ("8D", "DUP14"),
        ("8E", "DUP15"),
        ("8F", "DUP16"),
        ("90", "SWAP1"),
        ("91", "SWAP2"),
        ("92", "SWAP3"),
        ("93", "SWAP4"),
        ("94", "SWAP5"),
        ("95", "SWAP6"),
        ("96", "SWAP7"),
        ("97", "SWAP8"),
        ("98", "SWAP9"),
        ("99", "SWAP10"),
        ("9A", "SWAP11"),
        ("9B", "SWAP12"),
        ("9C", "SWAP13"),
        ("9D", "SWAP14"),
        ("9E", "SWAP15"),
        ("9F", "SWAP16"),
        ("A0", "LOG0"),
        ("A1", "LOG1"),
        ("A2", "LOG2"),
        ("A3", "LOG3"),
        ("A4", "LOG4"),
        ("B0", "PUSH"),
        ("B1", "DUP"),
        ("B2", "SWAP"),
        ("F0", "CREATE"),
        ("F1", "CALL"),
        ("F2", "CALLCODE"),
        ("F3", "RETURN"),
        ("F4", "DELEGATECALL"),
        ("F5", "CREATE2"),
        ("FA", "STATICCALL"),
        ("FD", "REVERT"),
        ("FF", "SELFDESTRUCT"),
    ]);
    opcode_hashmap
}

// 将合约字bytecode转为opcode
pub fn convert_code(filepath_or_bytecode: String, rules: HashMap<&str, &str>) -> String {// 接收文件路径或者直接是字节码
    // 获取bytecode
    let mut bytecode: String;
    if let Ok(t) = fs::read_to_string(filepath_or_bytecode.clone()){
        info!("Success read bytecode file");
        bytecode = t;
    }else{
        info!("Not find bytecode file, direct parsing of characters");
        bytecode = filepath_or_bytecode;
    }
 
    let len = bytecode.len(); // 字节码长度
    let mut opcode = String::new(); // 转换结果
    bytecode = bytecode.to_uppercase(); // 将字母转大写

    let mut ind = 2; // 起始位置，去除开头的0x
    while ind+2<=len {
        let code = &bytecode[ind..ind+2]; // 获取操作
        if let Some(t) = rules.get(code) { 
            if code.chars().nth(0)==Some('6')||code.chars().nth(0)==Some('7'){ // 判断是PUSH..
                // 观察解码规则可以得出
                let num = usize::from_str_radix(&t[4..], 10).unwrap(); // 获取"PUSH12"中的"12"
                if ind+2+2*num<=len{ // 防止出现PUSH4 0x12 不够的情况出现，只可能出现在末尾
                    opcode += *t;
                    opcode += " 0x"; // PUSH1 0x;
                    opcode += &bytecode[ind+2..ind+2+2*num].to_lowercase(); // PUSH1 0x12
                }
                ind += 2*num as usize;
            }
            else{
                opcode += *t;
            }
        }else{
            opcode += "'";
            opcode += code; // PUSH1 0x;
            opcode += "'(Unknown Opcode)";
        }
        opcode += "\n"; // 换行;
        ind += 2;
    }
    info!("get opcode success!!!");
    opcode
}

#[cfg(test)]
mod tests {

    use super::*;

    #[test]
    pub fn test(){
        // let input_bytecode = String::from("0x1232423");
        // let creation_code = String::from("0x1234");
        let bytecode = String::from("0x6080604052600436106101b05760003560e01c80637f1c7e3d116100ec578063ce533b8c1161008a578063f2fde38b11610064578063f2fde38b14610534578063f765827a14610549578063f7aaaa981461057b578063fee81cf41461059057600080fd5b8063ce533b8c146104c6578063d7533f02146104fc578063f04e283e1461051f57600080fd5b8063942b5cc9116100c6578063942b5cc91461043e578063a4a9170514610453578063a957338714610489578063ad144a94146104b157600080fd5b80637f1c7e3d146103af5780638bc9cf45146103c45780638da5cb5b146103e657600080fd5b80633ccfd60b116101595780634b6b6d7c116101335780634b6b6d7c1461030857806354d1f13d1461033e578063715018a6146103485780637261b12c1461035257600080fd5b80633ccfd60b146102ad578063497d2e60146102c457806349df728c146102e657600080fd5b8063145182921161018a5780631451829214610248578063256929621461025d578063263561301461026757600080fd5b806301157d5e146101bc57806305457b3d146101e45780631082a9c21461021657600080fd5b366101b757005b600080fd5b3480156101c857600080fd5b506101d260045481565b60405190815260200160405180910390f35b3480156101f057600080fd5b506102046101ff36600461160e565b6105d5565b60405190815260200160405180910390f35b34801561022257600080fd5b5061023661023136600461169c565b6106f8565b60405190815260200160405180910390f35b61025b610256366004611711565b61075c565b005b610265610979565b005b34801561027357600080fd5b50610287610282366004611777565b6109c9565b604080518251815260208084015190820152918101519082015260600160405180910390f35b3480156102b957600080fd5b506102c2610b84565b005b3480156102d057600080fd5b506102e46102df3660046117c3565b610c75565b005b3480156102f257600080fd5b506103066103013660046117dc565b610c82565b005b34801561031457600080fd5b506103286103233660046117fe565b610dbd565b6040516103359190611840565b60405180910390f35b610346610ee8565b005b610350610f24565b005b34801561035e57600080fd5b506103867f000000000000000000000000a7673ab3b0949a0efcd818c86c71fff7cd645ac781565b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200160405180910390f35b6103c26103bd366004611884565b610f38565b005b3480156103d057600080fd5b506103e46103df3660046117c3565b610fa0565b005b3480156103f257600080fd5b507fffffffffffffffffffffffffffffffffffffffffffffffffffffffff748739275460405173ffffffffffffffffffffffffffffffffffffffff909116815260200160405180910390f35b61045161044c366004611884565b610fad565b005b34801561045f57600080fd5b5061047361046e3660046117fe565b611015565b6040516104809190611840565b60405180910390f35b34801561049557600080fd5b5061049f60055481565b60405190815260200160405180910390f35b6104c46104bf3660046117fe565b61113e565b005b3480156104d257600080fd5b506104e66104e13660046118c6565b6111eb565b6040516104f39190611908565b60405180910390f35b34801561050857600080fd5b50604080516202a300815290519081900360200190f35b61053261052d3660046117dc565b61139d565b005b6105476105423660046117dc565b6113dd565b005b34801561055557600080fd5b506105696105643660046119cd565b611407565b60405190815260200160405180910390f35b61058e6105893660046117fe565b61147a565b005b34801561059c57600080fd5b506105c36105ab3660046117dc565b63389a75e1600c908152600091909152602090205490565b60405190815260200160405180910390f35b600254604051600091829173ffffffffffffffffffffffffffffffffffffffff9091169061060690869086906119ff565b6040519081900381206024820152604401604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529181526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fd6e4fa8600000000000000000000000000000000000000000000000000000000179052516106989190611a0f565b600060405180830381855afa9150503d80600081146106d3576040519150601f19603f3d011682016040523d82523d6000602084013e6106d8565b606091505b50915050808060200190518101906106f09190611a3e565b949350505050565b60008060005b8481101561075357600061073687878481811061071e5761071d611a57565b5b90506020028101906107309190611a86565b876109c9565b90508060400151836107489190611b21565b9250506001016106fe565b50949350505050565b348460005b8181101561093a57600061079989898481811061078157610780611a57565b5b90506020028101906107939190611a86565b876109c9565b905080604001518410156107f3578381604001516040517f03eb8b540000000000000000000000000000000000000000000000000000000081526004016107ea929190918252602082015260400190565b60405180910390fd5b60008054825173ffffffffffffffffffffffffffffffffffffffff909116905a908c8c8781811061082757610826611a57565b5b90506020028101906108399190611a86565b8c8b8d604051602401610850959493929190611b84565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529181526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f85f6d15500000000000000000000000000000000000000000000000000000000179052516108d19190611a0f565b600060405180830381858888f193505050503d806000811461090f576040519150601f19603f3d011682016040523d82523d6000602084013e610914565b606091505b50509050801561093057604082015161092d9086611bcb565b94505b5050600101610761565b50811561097057604051339083156108fc029084906000818181858888f1935050505015801561096e573d6000803e3d6000fd5b505b50505050505050565b60006202a30067ffffffffffffffff164201905063389a75e1600c5233600052806020600c2055337fdbf36a107da19e49527a7176a1babf963b4b0ff8cde35ee35d6cd8f1f9ac7e1d600080a250565b6109ed60405180606001604052806000815260200160008152602001600081525090565b60006109f985856105d5565b600354604051919250600091829173ffffffffffffffffffffffffffffffffffffffff1690610a32908990899087908a90602401611be5565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529181526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f50e9a7150000000000000000000000000000000000000000000000000000000017905251610ab39190611a0f565b600060405180830381855afa9150503d8060008114610aee576040519150601f19603f3d011682016040523d82523d6000602084013e610af3565b606091505b50915050600081806020019051810190610b0d9190611c0c565b602081015190915015610b3d5760208101518151610b2c906001611b21565b610b369190611b21565b9250610b42565b805192505b6000610b4d82611407565b90506000610b5b8286611b21565b604080516060810182529687526020870193909352918501919091525091979650505050505050565b60007f000000000000000000000000a7673ab3b0949a0efcd818c86c71fff7cd645ac773ffffffffffffffffffffffffffffffffffffffff164760405160006040518083038185875af1925050503d8060008114610bfe576040519150601f19603f3d011682016040523d82523d6000602084013e610c03565b606091505b5050905080610c72576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601060248201527f5472616e73666572206661696c65642e00000000000000000000000000000000604482015260640160405180910390fd5b50565b610c7d611527565b600555565b610c8a611527565b6040517f70a08231000000000000000000000000000000000000000000000000000000008152306004820152819073ffffffffffffffffffffffffffffffffffffffff82169063a9059cbb90339083906370a0823190602401602060405180830381865afa158015610d00573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d249190611a3e565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e085901b16815273ffffffffffffffffffffffffffffffffffffffff909216600483015260248201526044016020604051808303816000875af1158015610d94573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610db89190611c3e565b505050565b606060008267ffffffffffffffff811115610ddb57610dda61194e565b5b604051908082528060200260200182016040528015610e04578160200160208202803683370190505b50905060005b83811015610ee05760015460009073ffffffffffffffffffffffffffffffffffffffff16868684818110610e4157610e40611a57565b5b9050602002810190610e539190611c67565b604051610e619291906119ff565b600060405180830381855afa9150503d8060008114610e9c576040519150601f19603f3d011682016040523d82523d6000602084013e610ea1565b606091505b5091505080806020019051810190610eb99190611cd3565b838381518110610ecc57610ecb611a57565b5b602090810291909101015250600101610e0a565b509392505050565b63389a75e1600c523360005260006020600c2055337ffa7b8eab7da67f412cc9575ed43464468f9bfbae89d1675917346ca6d8fe3c92600080a2565b610f2c611527565b610f36600061155f565b565b7ff14fcbc80000000000000000000000000000000000000000000000000000000060009081525b81811015610f9b5760208160051b604401600437600080602460008073283af0b28c62c092c9727f1ee09c02ca627eb7f55af150600101610f5f565b505050565b610fa8611527565b600455565b7ff14fcbc80000000000000000000000000000000000000000000000000000000060009081525b818110156110105760208160051b604401600437600080602460008073253553366da8546fc250f225fe3d25d0c782303b5af150600101610fd4565b505050565b606060008267ffffffffffffffff8111156110335761103261194e565b5b60405190808252806020026020018201604052801561105c578160200160208202803683370190505b50905060005b83811015611136576000805473ffffffffffffffffffffffffffffffffffffffff1686868481811061109757611096611a57565b5b90506020028101906110a99190611c67565b6040516110b79291906119ff565b600060405180830381855afa9150503d80600081146110f2576040519150601f19603f3d011682016040523d82523d6000602084013e6110f7565b606091505b509150508080602001905181019061110f9190611cd3565b83838151811061112257611121611a57565b5b602090810291909101015250600101611062565b509392505050565b476004543460005b8060051b86013580870135806020830189016000376000808260004773283af0b28c62c092c9727f1ee09c02ca627eb7f55af150505060018101905084810361114657506103e8479093039182029290920490810191828110156111bf576303eb8b5460e01b6000528060045280830360245260446000fd5b828111156111e457600080600080868503326108fcf16111e3573d6000803e3d6000fd5b5b5050505050565b606060008267ffffffffffffffff8111156112095761120861194e565b5b604051908082528060200260200182016040528015611232578160200160208202803683370190505b50905060005b83811015611395576000805473ffffffffffffffffffffffffffffffffffffffff1686868481811061126d5761126c611a57565b5b905060200281019061127f9190611a86565b604051602401611290929190611cec565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529181526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167faeb8ce9b00000000000000000000000000000000000000000000000000000000179052516113119190611a0f565b600060405180830381855afa9150503d806000811461134c576040519150601f19603f3d011682016040523d82523d6000602084013e611351565b606091505b50915050808060200190518101906113699190611c3e565b83838151811061137c5761137b611a57565b5b9115156020928302919091019091015250600101611238565b509392505050565b6113a5611527565b63389a75e1600c52806000526020600c2080544211156113cd57636f5e88186000526004601cfd5b600090556113da8161155f565b50565b6113e5611527565b8060601b6113fb57637448fbae6000526004601cfd5b6114048161155f565b50565b6000808260200151836000015161141e9190611b21565b602084015190915015611458576005546103e89061143d836001611b21565b6114479190611d08565b6114519190611d26565b9392505050565b6103e8600454826114699190611d08565b6114739190611d26565b9392505050565b476004543460005b8060051b86013580870135806020830189016000376000808260004773253553366da8546fc250f225fe3d25d0c782303b5af150505060018101905084810361148257506103e8479093039182029290920490810191828110156114fb576303eb8b5460e01b6000528060045280830360245260446000fd5b8281111561152057600080600080868503326108fcf161151f573d6000803e3d6000fd5b5b5050505050565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffff7487392754331461155d576382b429006000526004601cfd5b565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffff74873927805473ffffffffffffffffffffffffffffffffffffffff9092169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a355565b60008083601f8401126115d757600080fd5b50813567ffffffffffffffff8111156115ef57600080fd5b60208301915083602082850101111561160757600080fd5b9250929050565b6000806020838503121561162157600080fd5b823567ffffffffffffffff81111561163857600080fd5b611644858286016115c5565b90969095509350505050565b60008083601f84011261166257600080fd5b50813567ffffffffffffffff81111561167a57600080fd5b6020830191508360208260051b850101111561169557600080fd5b9250929050565b6000806000604084860312156116b157600080fd5b833567ffffffffffffffff8111156116c857600080fd5b6116d486828701611650565b909790965060209590950135949350505050565b803573ffffffffffffffffffffffffffffffffffffffff8116811461170c57600080fd5b919050565b60008060008060006080868803121561172957600080fd5b853567ffffffffffffffff81111561174057600080fd5b61174c88828901611650565b909650945061175f9050602087016116e8565b94979396509394604081013594506060013592915050565b60008060006040848603121561178c57600080fd5b833567ffffffffffffffff8111156117a357600080fd5b6117af868287016115c5565b909790965060209590950135949350505050565b6000602082840312156117d557600080fd5b5035919050565b6000602082840312156117ee57600080fd5b6117f7826116e8565b9392505050565b6000806020838503121561181157600080fd5b823567ffffffffffffffff81111561182857600080fd5b61183485828601611650565b90969095509350505050565b6020808252825182820181905260009190848201906040850190845b818110156118785783518352928401929184019160010161185c565b50909695505050505050565b6000806020838503121561189757600080fd5b823567ffffffffffffffff8111156118ae57600080fd5b6118ba85828601611650565b90969095509350505050565b600080602083850312156118d957600080fd5b823567ffffffffffffffff8111156118f057600080fd5b6118fc85828601611650565b90969095509350505050565b6020808252825182820181905260009190848201906040850190845b81811015611942578351151583529284019291840191600101611924565b50909695505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040805190810167ffffffffffffffff811182821017156119c7577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60405290565b6000604082840312156119df57600080fd5b6119e761197d565b82358152602083013560208201528091505092915050565b8183823760009101908152919050565b6000825160005b81811015611a305760208186018101518583015201611a16565b506000920191825250919050565b600060208284031215611a5057600080fd5b5051919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe1843603018112611abb57600080fd5b83018035915067ffffffffffffffff821115611ad657600080fd5b602001915036819003821315611aeb57600080fd5b9250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b80820180821115611b3557611b34611af2565b5b92915050565b8183528181602085013750600060208284010152600060207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f840116840101905092915050565b608081526000611b98608083018789611b3b565b73ffffffffffffffffffffffffffffffffffffffff95909516602083015250604081019290925260609091015292915050565b81810381811115611bdf57611bde611af2565b5b92915050565b606081526000611bf9606083018688611b3b565b6020830194909452506040015292915050565b600060408284031215611c1e57600080fd5b611c2661197d565b82518152602083015160208201528091505092915050565b600060208284031215611c5057600080fd5b81518015158114611c6057600080fd5b9392505050565b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe1843603018112611c9c57600080fd5b83018035915067ffffffffffffffff821115611cb757600080fd5b602001915036819003821315611ccc57600080fd5b9250929050565b600060208284031215611ce557600080fd5b5051919050565b602081526000611d00602083018486611b3b565b949350505050565b8082028115828204841417611d2057611d1f611af2565b5b92915050565b600082611d5c577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b50049056fea2646970667358221220dce1abe387fd1af34481355632c41a1686bf8ba8cb560c15462df880998b37dc64736f6c63430008110033");
        // let bytecode = String::from("./test/test_bytecode.txt"); 
        // 定义转码对应的规则
        let rules = get_rules();
        let input_opcode = convert_code(bytecode, rules.clone());
        // let creation_code_opcode = convert_code(creation_code, rules);
        // 将结果保存
        // println!("Success {}", input_opcode);
        fs::write("input_opcode.txt", input_opcode).unwrap();
        // fs::write("creation_code_opcode.txt", creation_code_opcode).unwrap();

    }
    
}